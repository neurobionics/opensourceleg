site_name: opensourceleg
repo_url: https://github.com/neurobionics/opensourceleg
site_url: https://neurobionics.github.io/opensourceleg
site_description: An open-source SDK for developing and testing algorithms on commonly used robotic hardware.
site_author: Open-Source Leg
edit_uri: edit/main/docs/
repo_name: neurobionics/opensourceleg
copyright: Maintained by <a href="https://www.opensourceleg.org/">The Open-Source Leg Team</a>.

nav:
  - Overview: index.md
  - Installation: installation.md
  - Tutorials:
      - Sensors:
          - Getting Started: tutorials/sensors/getting_started.md
          - Reading ADC Data: tutorials/sensors/reading_adc.md
          - Reading Encoder Data: tutorials/sensors/reading_encoder_data.md
          - Reading IMU Data: tutorials/sensors/reading_imu_data.md
          - Reading Loadcell Data: tutorials/sensors/reading_loadcell_data.md
      - Actuators:
          - Getting Started: tutorials/actuators/getting_started.md
          - Reading Sensor Data: tutorials/actuators/reading_sensor_data.md
          - Commanding Voltage: tutorials/actuators/commanding_voltage.md
          - Commanding Current: tutorials/actuators/commanding_current.md
          - Commanding Position: tutorials/actuators/commanding_position.md
          - Commanding Impedance: tutorials/actuators/commanding_impedance.md
      - Control:
          - Compiled Controller: tutorials/control/compiled_controller.md
          - State Machine: tutorials/control/state_machine.md
          - Torque Trajectory: tutorials/control/torque_trajectory.md
      - Logging:
          - Getting Started: tutorials/logging/getting_started.md
          - Configuring Logger: tutorials/logging/configuring_logger.md
          - Logging Data: tutorials/logging/logging_data.md
      - Robots:
          - Getting Started: tutorials/robots/getting_started.md
          - Homing OSL Joints: tutorials/robots/homing_joints.md
      - Utilities:
          - SoftRealtimeLoop:
              - Getting Started: tutorials/utilities/softrealtimeloop/getting_started.md
              - Running Functions: tutorials/utilities/softrealtimeloop/running_functions.md
              - Using Iterators: tutorials/utilities/softrealtimeloop/using_iterators.md
              - Real-time Control: tutorials/utilities/softrealtimeloop/realtime_control.md
          - Profiler: tutorials/utilities/profiler/profiling_code.md
      - Other Best Practices: tutorials/other_best_practices.md
  - Examples:
      - Basic Motion: examples/basic_motion.md
      - Finite State Machine Walking Controller: examples/fsm_walking_controller.md
      - FSM Walking Ankle Controller: examples/fsm_walking_ankle_controller.md
  - API:
      - Actuators:
          - Base: api/actuators/actuators.md
          - Dephy: api/actuators/dephy.md
          - Moteus: api/actuators/moteus.md
          - TMotor: api/actuators/tmotor.md
      - Extras:
          - Collections:
              - Validators: api/extras/collections/validators.md
          - Safety:
              - Safety: api/extras/safety/safety.md
      - Control:
          - Compiled Controller: api/control/compiled.md
          - State Machine: api/control/fsm.md
      - Logging:
          - Logger: api/logging.md
      - Math:
          - Math: api/math/math.md
      - Sensors:
          - Base: api/sensors/sensors_base.md
          - IMU: api/sensors/imu.md
          - Loadcell: api/sensors/loadcell.md
          - ADC: api/sensors/adc.md
          - Encoder: api/sensors/encoder.md
      - Robots:
          - Base: api/robots/robots.md
          - OSL: api/robots/osl.md
      - Utilities:
          - SoftRealtimeLoop: api/utilities/softrealtimeloop.md
          - Profiler: api/utilities/profile.md
  - Contributing: contributing.md
  - Security: security.md
  - License: license.md
plugins:
  - search
  - mkdocstrings:
      handlers:
        python:
          paths: [.]
theme:
  name: material
  feature:
    tabs: true
  highlightjs: true
  features:
    - content.code.copy
  hljs_languages:
    - python
    - yaml
    - bash
    - json
    - markdown
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: white
      accent: deep orange
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: black
      accent: deep orange
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  icon:
    repo: fontawesome/brands/github

extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/neurobionics/opensourceleg
    - icon: fontawesome/brands/python
      link: https://pypi.org/project/opensourceleg

markdown_extensions:
  - attr_list
  - pymdownx.snippets
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

  - toc:
      permalink: true

  - pymdownx.arithmatex:
      generic: true
  - def_list
  - pymdownx.tasklist:
      custom_checkbox: true

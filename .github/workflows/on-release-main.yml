name: Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
        shell: bash

      - name: Add UV to Path
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        shell: bash

      - name: Install dependencies
        run: uv sync
        shell: bash

      - name: Build wheels
        run: uv run maturin build --release --out dist
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist

  build-cross-platform:
    name: Build cross-platform wheels for ARM
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cross-compilation targets
        run: |
          rustup target add aarch64-unknown-linux-gnu
          rustup target add armv7-unknown-linux-gnueabihf

      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add UV to Path
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv sync

      - name: Install cross-compilation dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf

      - name: Build ARM64 wheel (Raspberry Pi 4/5)
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: uv run maturin build --release --target aarch64-unknown-linux-gnu --out dist

      - name: Build ARMhf wheel (Raspberry Pi 3/older)
        env:
          CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc
        run: uv run maturin build --release --target armv7-unknown-linux-gnueabihf --out dist

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-cross-platform
          path: dist

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels, build-cross-platform]
    permissions:
      id-token: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: List all wheels
        run: ls -la dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

  deploy-docs:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-uv-env

      - name: Deploy documentation
        run: make docs-deploy

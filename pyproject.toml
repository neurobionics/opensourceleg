[tool.poetry]
name = "opensourceleg"
version = "3.1.0"
description = "An open-source SDK for developing and testing algorithms on commonly used robotic hardware."
authors = ["Open-Source Leg <opensourceleg@gmail.com>"]
repository = "https://github.com/neurobionics/opensourceleg"
documentation = "https://neurobionics.github.io/opensourceleg/"
readme = "README.md"
packages = [
  {include = "opensourceleg"}
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = "^1.24.3"
flexsea = [
    {version = "^12.0.3", python = ">=3.11"},
    {version = "==8.0.1", python = "<3.11"}
]
smbus2 = ">=0.4.2"
grpcio = "^1.65.5"
grpcio-tools = "^1.65.5"
types-protobuf = "^4.21.0"
moteus = "^0.3.72"
moteus-pi3hat = {version = "^0.3.29", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"}
board = "^1.0"
adafruit-circuitpython-bno055 = {version = "^5.4.13", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"}
adafruit-circuitpython-lis3dh = {version = "^5.2.2", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"}

pandas = "^2.2.3"
[tool.poetry.extras]
dephy = ["flexsea"]
moteus = ["moteus", "moteus-pi3hat"]
communication = ["smbus2"]
messaging = ["grpcio", "grpcio-tools", "types-protobuf"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["opensourceleg"]
exclude = ["opensourceleg/actuators/moteus.py", "opensourceleg/actuators/tmotor.py"]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # DoNotAssignLambda
    "E731",
    "TRY003",
    "SIM115",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["opensourceleg"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
